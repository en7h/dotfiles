#!/usr/bin/env zsh

# Load nvm to the shell
function sonvm {
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
}

# Find the git branch
function git_branch {
    [ -d "$PWD/.git" ] && /usr/bin/git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/%F{2} (%f%F{11}\1%f%F{2})%f/'
}


########

export KEYCONJURER_ACCOUNT=""
function kcj() {
  command=keyconjurer
  if ! type "$command" >/dev/null 2>&1; then
    echo "Install keyconjurer ..."
    return -1
  else
    echo "Getting keys: $1"
    rm -rf ~/.kcj.session || true
    ${command} get -t 30 --ttl 8 --role=GL-Admin $1 > ~/.kcj.session
    echo "export KEYCONJURER_ACCOUNT=$1" >> ~/.kcj.session
    source ~/.kcj.session
    echo "Done, saved to ~/.kcj.session"
  fi
}

function kcjl() {
  source ~/.kcj.session
}

function docker_clean() {
  docker volume rm $(docker volume ls -qf dangling=true)
  docker rmi --force $(docker images | grep '^<none>' | awk '{print $3}')
}


####

# If there's already a kubeconfig file in ~/.kube/config it will import that too and all the contexts
DEFAULT_KUBECONFIG_FILE="$HOME/.kube/config"
if test -f "${DEFAULT_KUBECONFIG_FILE}"; then
  export KUBECONFIG="$DEFAULT_KUBECONFIG_FILE"
fi

# Your additional kubeconfig files should be inside ~/.kube/config-files
ADD_KUBECONFIG_FILES="$HOME/.kube/config-files"
mkdir -p "${ADD_KUBECONFIG_FILES}"
OIFS="$IFS"
IFS=$'\n'
for kubeconfigFile in $(find "${ADD_KUBECONFIG_FILES}" -type f -name "*.yml" -o -name "*.yaml"); do
  export KUBECONFIG="$kubeconfigFile:$KUBECONFIG"
done
IFS="$OIFS"